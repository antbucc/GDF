package RetrieveInstances.plugin;

/*Generated by MPS */

import jetbrains.mps.progress.ProgressMonitorAdapter;
import org.jetbrains.mps.openapi.model.SModel;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class RetrieveMethod implements Runnable {
  public RetrieveMethod(ProgressMonitorAdapter adapter, SModel model) {
    this.myAdapter = adapter;
    myModel = model;
  }
  public void run() {
    SNode node = createIstanzaScuola_7rmalq_a0a0b();
    SModelOperations.addRootNode(this.myModel, node);
    this.myAdapter.step("Do some work tish write lock");

  }
  private final ProgressMonitorAdapter myAdapter;
  private SModel myModel;

  private static SNode createIstanzaScuola_7rmalq_a0a0b() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode n1 = SModelUtil_new.instantiateConceptDeclaration(MetaAdapterFactory.getConcept(0x119e117f12604f12L, 0xb46eefd3d0e4c44fL, 0x29c2332daa80e68dL, "GiML.structure.IstanzaScuola"), null, null, false);
    n1.setProperty(MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name"), "pippo");
    n1.setProperty(MetaAdapterFactory.getProperty(0x119e117f12604f12L, 0xb46eefd3d0e4c44fL, 0x29c2332daa80e68dL, 0x29c2332daab7106bL, "indirizzo"), "test");
    return n1;
  }
}
