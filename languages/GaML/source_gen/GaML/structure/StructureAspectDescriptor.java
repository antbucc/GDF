package GaML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptActionRule = createDescriptorForActionRule();
  /*package*/ final ConceptDescriptor myConceptChallengeField = createDescriptorForChallengeField();
  /*package*/ final ConceptDescriptor myConceptChallengeModel = createDescriptorForChallengeModel();
  /*package*/ final ConceptDescriptor myConceptChallengeRule = createDescriptorForChallengeRule();
  /*package*/ final ConceptDescriptor myConceptClasse = createDescriptorForClasse();
  /*package*/ final ConceptDescriptor myConceptDefinizioneGioco = createDescriptorForDefinizioneGioco();
  /*package*/ final ConceptDescriptor myConceptDominio = createDescriptorForDominio();
  /*package*/ final ConceptDescriptor myConceptIstituto = createDescriptorForIstituto();
  /*package*/ final ConceptDescriptor myConceptPlayerChallenge = createDescriptorForPlayerChallenge();
  /*package*/ final ConceptDescriptor myConceptRule = createDescriptorForRule();
  /*package*/ final ConceptDescriptor myConceptScuola = createDescriptorForScuola();
  /*package*/ final ConceptDescriptor myConceptTeamChallenge = createDescriptorForTeamChallenge();
  /*package*/ final ConceptDescriptor myConceptThenActionRule = createDescriptorForThenActionRule();
  /*package*/ final ConceptDescriptor myConceptThenChallengeRule = createDescriptorForThenChallengeRule();
  /*package*/ final ConceptDescriptor myConceptWhenActionRule = createDescriptorForWhenActionRule();
  /*package*/ final ConceptDescriptor myConceptWhenChallengeRule = createDescriptorForWhenChallengeRule();
  /*package*/ final ConceptDescriptor myConceptdataDrivenAction = createDescriptorFordataDrivenAction();
  /*package*/ final ConceptDescriptor myConcepteventDrivenAction = createDescriptorForeventDrivenAction();
  /*package*/ final ConceptDescriptor myConceptexperiencePoint = createDescriptorForexperiencePoint();
  /*package*/ final ConceptDescriptor myConceptskillPoint = createDescriptorForskillPoint();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptActionRule, myConceptChallengeField, myConceptChallengeModel, myConceptChallengeRule, myConceptClasse, myConceptDefinizioneGioco, myConceptDominio, myConceptIstituto, myConceptPlayerChallenge, myConceptRule, myConceptScuola, myConceptTeamChallenge, myConceptThenActionRule, myConceptThenChallengeRule, myConceptWhenActionRule, myConceptWhenChallengeRule, myConceptdataDrivenAction, myConcepteventDrivenAction, myConceptexperiencePoint, myConceptskillPoint);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.ActionRule:
        return myConceptActionRule;
      case LanguageConceptSwitch.ChallengeField:
        return myConceptChallengeField;
      case LanguageConceptSwitch.ChallengeModel:
        return myConceptChallengeModel;
      case LanguageConceptSwitch.ChallengeRule:
        return myConceptChallengeRule;
      case LanguageConceptSwitch.Classe:
        return myConceptClasse;
      case LanguageConceptSwitch.DefinizioneGioco:
        return myConceptDefinizioneGioco;
      case LanguageConceptSwitch.Dominio:
        return myConceptDominio;
      case LanguageConceptSwitch.Istituto:
        return myConceptIstituto;
      case LanguageConceptSwitch.PlayerChallenge:
        return myConceptPlayerChallenge;
      case LanguageConceptSwitch.Rule:
        return myConceptRule;
      case LanguageConceptSwitch.Scuola:
        return myConceptScuola;
      case LanguageConceptSwitch.TeamChallenge:
        return myConceptTeamChallenge;
      case LanguageConceptSwitch.ThenActionRule:
        return myConceptThenActionRule;
      case LanguageConceptSwitch.ThenChallengeRule:
        return myConceptThenChallengeRule;
      case LanguageConceptSwitch.WhenActionRule:
        return myConceptWhenActionRule;
      case LanguageConceptSwitch.WhenChallengeRule:
        return myConceptWhenChallengeRule;
      case LanguageConceptSwitch.dataDrivenAction:
        return myConceptdataDrivenAction;
      case LanguageConceptSwitch.eventDrivenAction:
        return myConcepteventDrivenAction;
      case LanguageConceptSwitch.experiencePoint:
        return myConceptexperiencePoint;
      case LanguageConceptSwitch.skillPoint:
        return myConceptskillPoint;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForActionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "ActionRule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f4dL);
    b.class_(false, false, false);
    b.super_("GaML.structure.Rule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x3eecc86bd037a723L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812433981261");
    b.version(2);
    b.aggregate("when", 0x23eac9cba95128baL).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f53L).optional(false).ordered(true).multiple(false).origin("2588102812433983674").done();
    b.aggregate("then", 0x23eac9cba9520687L).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f54L).optional(false).ordered(true).multiple(false).origin("2588102812434040455").done();
    b.alias("actionRule");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChallengeField() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "ChallengeField", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x19b939282e254233L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/1853575566375338547");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChallengeModel() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "ChallengeModel", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x19b939282e25420aL);
    b.class_(false, false, false);
    b.super_("GML.structure.Challenge", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037b7b3L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/1853575566375338506");
    b.version(2);
    b.property("modelName", 0x19b939282e254221L).type(PrimitiveTypeId.STRING).origin("1853575566375338529").done();
    b.property("start", 0x19b939282e254229L).type(PrimitiveTypeId.STRING).origin("1853575566375338537").done();
    b.property("end", 0x19b939282e254224L).type(PrimitiveTypeId.STRING).origin("1853575566375338532").done();
    b.aggregate("fields", 0x19b939282e25424aL).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x19b939282e254233L).optional(true).ordered(true).multiple(true).origin("1853575566375338570").done();
    b.alias("challengeModel");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChallengeRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "ChallengeRule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f57L);
    b.class_(false, false, false);
    b.super_("GaML.structure.Rule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x3eecc86bd037a723L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812433981271");
    b.version(2);
    b.aggregate("when", 0x23eac9cba95128c1L).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f55L).optional(false).ordered(true).multiple(false).origin("2588102812433983681").done();
    b.aggregate("then", 0x23eac9cba952068bL).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f56L).optional(false).ordered(true).multiple(false).origin("2588102812434040459").done();
    b.alias("challengeRule");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClasse() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Classe", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d130dL);
    b.class_(false, false, false);
    b.super_("GML.structure.Team", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a735L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/6480714681798169357");
    b.version(2);
    b.alias("classe");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDefinizioneGioco() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "DefinizioneGioco", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba952c550L);
    b.class_(false, false, true);
    b.super_("GML.structure.Game", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd03861a4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812434089296");
    b.version(2);
    b.aggregate("dominio", 0x59f01faab33d131aL).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d1304L).optional(false).ordered(true).multiple(false).origin("6480714681798169370").done();
    b.aggregate("istituto", 0x59f01faab33d1347L).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d1307L).optional(false).ordered(true).multiple(false).origin("6480714681798169415").done();
    b.aggregate("scuola", 0x59f01faab33d134aL).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d130aL).optional(false).ordered(true).multiple(false).origin("6480714681798169418").done();
    b.aggregate("classi", 0x59f01faab33d134eL).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d130dL).optional(false).ordered(true).multiple(true).origin("6480714681798169422").done();
    b.alias("gameDefinition");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDominio() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Dominio", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d1304L);
    b.class_(false, false, false);
    b.super_("GML.structure.Team", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a735L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/6480714681798169348");
    b.version(2);
    b.aggregate("istituti", 0x59f01faab33d1312L).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d1307L).optional(true).ordered(true).multiple(true).origin("6480714681798169362").done();
    b.alias("dominio");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForIstituto() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Istituto", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d1307L);
    b.class_(false, false, false);
    b.super_("GML.structure.Team", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a735L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/6480714681798169351");
    b.version(2);
    b.aggregate("scuole", 0x59f01faab33d1316L).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d130aL).optional(true).ordered(true).multiple(true).origin("6480714681798169366").done();
    b.alias("istituto");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForPlayerChallenge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "PlayerChallenge", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba951fea9L);
    b.class_(false, false, false);
    b.super_("GML.structure.Challenge", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037b7b3L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812434038441");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Rule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x3eecc86bd037a723L);
    b.class_(false, false, false);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/4534219290235610915");
    b.version(2);
    b.property("gameId", 0x3eecc86bd037a724L).type(PrimitiveTypeId.STRING).origin("4534219290235610916").done();
    b.alias("rule");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForScuola() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Scuola", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d130aL);
    b.class_(false, false, false);
    b.super_("GML.structure.Team", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a735L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/6480714681798169354");
    b.version(2);
    b.aggregate("classi", 0x59f01faab33d1318L).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x59f01faab33d130dL).optional(true).ordered(true).multiple(true).origin("6480714681798169368").done();
    b.alias("scuola");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTeamChallenge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "TeamChallenge", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba951feaaL);
    b.class_(false, false, false);
    b.super_("GML.structure.Challenge", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037b7b3L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812434038442");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThenActionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "ThenActionRule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f54L);
    b.class_(false, false, false);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812433981268");
    b.version(2);
    b.associate("when", 0x23eac9cba951ac4fL).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f53L).optional(false).origin("2588102812434017359").done();
    b.alias("thenAction");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForThenChallengeRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "ThenChallengeRule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f56L);
    b.class_(false, false, true);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812433981270");
    b.version(2);
    b.associate("whenRef", 0x23eac9cba95128e0L).target(0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f55L).optional(false).origin("2588102812433983712").done();
    b.alias("thenChallenge");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhenActionRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "WhenActionRule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f53L);
    b.class_(false, false, false);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812433981267");
    b.version(2);
    b.aggregate("action", 0x23eac9cba951ac4aL).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd0379cf3L).optional(false).ordered(true).multiple(false).origin("2588102812434017354").done();
    b.aggregate("points", 0x23eac9cba951ac4cL).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L).optional(true).ordered(true).multiple(true).origin("2588102812434017356").done();
    b.alias("whenAction");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWhenChallengeRule() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "WhenChallengeRule", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9511f55L);
    b.class_(false, false, false);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812433981269");
    b.version(2);
    b.aggregate("challenge", 0x23eac9cba95128c8L).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037b7b3L).optional(false).ordered(true).multiple(false).origin("2588102812433983688").done();
    b.aggregate("player", 0x23eac9cba95128caL).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a739L).optional(false).ordered(true).multiple(false).origin("2588102812433983690").done();
    b.aggregate("game", 0x23eac9cba951d8adL).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd03861a4L).optional(false).ordered(true).multiple(false).origin("2588102812434028717").done();
    b.aggregate("points", 0x23eac9cba95128d1L).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L).optional(true).ordered(true).multiple(true).origin("2588102812433983697").done();
    b.aggregate("badgeCollection", 0x23eac9cba951ac44L).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6e9L).optional(true).ordered(true).multiple(true).origin("2588102812434017348").done();
    b.alias("whenChallenge");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFordataDrivenAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "dataDrivenAction", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x5d61ef6eeb9c76c4L);
    b.class_(false, false, false);
    b.super_("GML.structure.Action", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd0379cf3L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/6728922577946572484");
    b.version(2);
    b.aggregate("inputData", 0x19b939282e9481feL).target(0xdc26d82528834e88L, 0x933cf0e9f65c69c4L, 0x23eac9cba8f42c9dL).optional(true).ordered(true).multiple(true).origin("1853575566382629374").done();
    b.alias("dataAction");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForeventDrivenAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "eventDrivenAction", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9555d7eL);
    b.class_(false, false, false);
    b.super_("GML.structure.Action", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd0379cf3L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812434259326");
    b.version(2);
    b.property("executed", 0x23eac9cba956d111L).type(PrimitiveTypeId.BOOLEAN).origin("2588102812434354449").done();
    b.alias("eventAction");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForexperiencePoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "experiencePoint", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9555d7fL);
    b.class_(false, false, false);
    b.super_("GML.structure.Point", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812434259327");
    b.version(2);
    b.aggregate("period", 0x23eac9cba9845cb0L).target(0xdc26d82528834e88L, 0x933cf0e9f65c69c4L, 0x23eac9cba9809dd0L).optional(false).ordered(true).multiple(false).origin("2588102812437339312").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForskillPoint() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "skillPoint", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x23eac9cba9555d80L);
    b.class_(false, false, false);
    b.super_("GML.structure.Point", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/2588102812434259328");
    b.version(2);
    b.aggregate("period", 0x23eac9cba9839e88L).target(0xdc26d82528834e88L, 0x933cf0e9f65c69c4L, 0x23eac9cba9809dd0L).optional(false).ordered(true).multiple(false).origin("2588102812437290632").done();
    return b.create();
  }
}
