package GaML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptClasses = createDescriptorForClasses();
  /*package*/ final ConceptDescriptor myConceptCount = createDescriptorForCount();
  /*package*/ final ConceptDescriptor myConceptDistance = createDescriptorForDistance();
  /*package*/ final ConceptDescriptor myConceptGame = createDescriptorForGame();
  /*package*/ final ConceptDescriptor myConceptTrips = createDescriptorForTrips();
  /*package*/ final ConceptDescriptor myConcepttripAction = createDescriptorFortripAction();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptClasses, myConceptCount, myConceptDistance, myConceptGame, myConceptTrips, myConcepttripAction);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Classes:
        return myConceptClasses;
      case LanguageConceptSwitch.Count:
        return myConceptCount;
      case LanguageConceptSwitch.Distance:
        return myConceptDistance;
      case LanguageConceptSwitch.Game:
        return myConceptGame;
      case LanguageConceptSwitch.Trips:
        return myConceptTrips;
      case LanguageConceptSwitch.tripAction:
        return myConcepttripAction;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForClasses() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Classes", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x34b4aa922167ad21L);
    b.class_(false, false, false);
    b.super_("GML.structure.Point", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/3797847930382560545");
    b.version(2);
    b.alias("classes");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCount() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Count", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x34b4aa922167ad19L);
    b.class_(false, false, false);
    b.super_("GML.structure.Point", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/3797847930382560537");
    b.version(2);
    b.alias("count");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDistance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Distance", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x34b4aa922167ad1dL);
    b.class_(false, false, false);
    b.super_("GML.structure.Point", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/3797847930382560541");
    b.version(2);
    b.alias("distance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGame() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Game", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x3eecc86bd03861a4L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/4534219290235658660");
    b.version(2);
    b.property("id", 0x3eecc86bd0389f79L).type(PrimitiveTypeId.STRING).origin("4534219290235674489").done();
    b.property("domain", 0x3eecc86bd0389f7bL).type(PrimitiveTypeId.STRING).origin("4534219290235674491").done();
    b.property("owner", 0x3eecc86bd0389f7eL).type(PrimitiveTypeId.STRING).origin("4534219290235674494").done();
    b.aggregate("actions", 0x3eecc86bd03886acL).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd0379cf3L).optional(true).ordered(true).multiple(true).origin("4534219290235668140").done();
    b.aggregate("badgeCollections", 0x3eecc86bd03886aaL).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6e9L).optional(true).ordered(true).multiple(true).origin("4534219290235668138").done();
    b.aggregate("points", 0x3eecc86bd03886afL).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L).optional(true).ordered(true).multiple(true).origin("4534219290235668143").done();
    b.aggregate("rules", 0x3eecc86bd0389f74L).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a723L).optional(true).ordered(true).multiple(true).origin("4534219290235674484").done();
    b.alias("game");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTrips() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "Trips", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x34b4aa922167ad14L);
    b.class_(false, false, false);
    b.super_("GML.structure.Point", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a6b1L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/3797847930382560532");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorFortripAction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GaML", "tripAction", 0x1472546da96448a0L, 0xa11e4271b165a42cL, 0x5d61ef6eeb9c76c4L);
    b.class_(false, false, true);
    b.super_("GML.structure.Action", 0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd0379cf3L);
    b.origin("r:7b2e49c1-57f5-42cc-8477-7c9fe4bb9db4(GaML.structure)/6728922577946572484");
    b.version(2);
    b.aggregate("actionData", 0x23eac9cba8df09e4L).target(0xdc26d82528834e88L, 0x933cf0e9f65c69c4L, 0x23eac9cba8deb2a6L).optional(true).ordered(true).multiple(false).origin("2588102812426504676").done();
    b.alias("tripAction");
    return b.create();
  }
}
