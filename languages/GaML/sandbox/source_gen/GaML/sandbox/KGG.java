package GaML.sandbox;

/*Generated by MPS */

import it.smartcommunitylab.ApiClient;
import it.smartcommunitylab.basic.api.PlayerControllerApi;
import it.smartcommunitylab.basic.api.GameControllerApi;
import it.smartcommunitylab.model.GameDTO;
import java.util.List;
import java.util.ArrayList;
import it.smartcommunitylab.model.ext.PointConcept;
import java.util.Date;
import it.smartcommunitylab.model.BadgeCollectionConcept;
import it.smartcommunitylab.ApiException;

public class KGG {
  private static final String GAMIFICATION_URL = "http://localhost:18000/gamification";
  private static final String USER = "antbucc";
  private static final String PWD = "antbucc";

  public static void run() {
    ApiClient client = new ApiClient(GAMIFICATION_URL);
    client.setUsername(USER);
    client.setPassword(PWD);

    PlayerControllerApi playerApi = new PlayerControllerApi(client);
    GameControllerApi gameApi = new GameControllerApi(client);
    try {
      GameDTO game = new GameDTO();

      // add Game Info 
      game.setName("KGG");
      game.setId("kggId");
      game.setOwner("FBK");

      List<String> actions = new ArrayList<String>();


      //  Add Game DataDriven Actions 
      actions.add("PediBusKidTrip");
      actions.add("ClassWalkTrip");
      actions.add("PlayerCalendarTrip");


      //  Add Game EventDriven Actions 
      actions.add("CalendarDayFilled");

      //  Add Game Skill Points 

      List<PointConcept> points = new ArrayList<PointConcept>();
      long DAY = 60 * 60 * 24 * 1000;
      long WEEK = DAY * 7;
      Date start = new Date();


      //  Add Game Experience Points 

      game.setPointConcept(points);

      //  add badge collections 
      List<BadgeCollectionConcept> badgeCollections = new ArrayList<BadgeCollectionConcept>();
      //  Add Game Experience Points 



      // add all the elements at the Game Definition 
      game.setActions(actions);
      game.setPointConcept(points);
      game.setBadgeCollectionConcept(badgeCollections);

      // POST request to the Gamification Engine to memorize the Game Definition 
      gameApi.saveGameUsingPOST2(game);

    } catch (ApiException e) {
      e.printStackTrace();
    }

  }
}
