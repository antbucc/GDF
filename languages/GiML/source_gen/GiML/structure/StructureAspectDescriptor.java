package GiML.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptChallengeAssignment = createDescriptorForChallengeAssignment();
  /*package*/ final ConceptDescriptor myConceptChallengeInstance = createDescriptorForChallengeInstance();
  /*package*/ final ConceptDescriptor myConceptChallengeVariableAssignment = createDescriptorForChallengeVariableAssignment();
  /*package*/ final ConceptDescriptor myConceptEnvironment = createDescriptorForEnvironment();
  /*package*/ final ConceptDescriptor myConceptTeamState = createDescriptorForTeamState();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptChallengeAssignment, myConceptChallengeInstance, myConceptChallengeVariableAssignment, myConceptEnvironment, myConceptTeamState);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.ChallengeAssignment:
        return myConceptChallengeAssignment;
      case LanguageConceptSwitch.ChallengeInstance:
        return myConceptChallengeInstance;
      case LanguageConceptSwitch.ChallengeVariableAssignment:
        return myConceptChallengeVariableAssignment;
      case LanguageConceptSwitch.Environment:
        return myConceptEnvironment;
      case LanguageConceptSwitch.TeamState:
        return myConceptTeamState;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForChallengeAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GiML", "ChallengeAssignment", 0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa922165930aL);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3aec94a4-ce6f-409b-b63c-bd90270fe589(GiML.structure)/3797847930382422794");
    b.version(2);
    b.property("challengeName", 0x34b4aa922165930eL).type(PrimitiveTypeId.STRING).origin("3797847930382422798").done();
    b.property("instanceName", 0x34b4aa9221659311L).type(PrimitiveTypeId.STRING).origin("3797847930382422801").done();
    b.property("challengeType", 0x34b4aa9221659329L).type(PrimitiveTypeId.STRING).origin("3797847930382422825").done();
    b.property("origin", 0x34b4aa9221659335L).type(PrimitiveTypeId.STRING).origin("3797847930382422837").done();
    b.property("start", 0x34b4aa9221659340L).type(PrimitiveTypeId.STRING).origin("3797847930382422848").done();
    b.property("end", 0x34b4aa922165934dL).type(PrimitiveTypeId.STRING).origin("3797847930382422861").done();
    b.property("priority", 0x34b4aa922165935cL).type(PrimitiveTypeId.INTEGER).origin("3797847930382422876").done();
    b.aggregate("variableAssignments", 0x34b4aa9221659332L).target(0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa9221659377L).optional(true).ordered(true).multiple(true).origin("3797847930382422834").done();
    b.alias("challengeAssignment");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChallengeInstance() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GiML", "ChallengeInstance", 0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa9221659304L);
    b.class_(false, false, false);
    b.origin("r:3aec94a4-ce6f-409b-b63c-bd90270fe589(GiML.structure)/3797847930382422788");
    b.version(2);
    b.property("gameID", 0x34b4aa9221659317L).type(PrimitiveTypeId.STRING).origin("3797847930382422807").done();
    b.property("playerID", 0x34b4aa922165931aL).type(PrimitiveTypeId.STRING).origin("3797847930382422810").done();
    b.aggregate("challengeAssignment", 0x34b4aa922165931fL).target(0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa922165930aL).optional(true).ordered(true).multiple(false).origin("3797847930382422815").done();
    b.alias("challengeInstance");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForChallengeVariableAssignment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GiML", "ChallengeVariableAssignment", 0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa9221659377L);
    b.class_(false, false, false);
    b.origin("r:3aec94a4-ce6f-409b-b63c-bd90270fe589(GiML.structure)/3797847930382422903");
    b.version(2);
    b.property("idVariable", 0x34b4aa9221659378L).type(PrimitiveTypeId.STRING).origin("3797847930382422904").done();
    b.property("valueVariable", 0x34b4aa922165937bL).type(PrimitiveTypeId.STRING).origin("3797847930382422907").done();
    b.alias("variableAssignment");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnvironment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GiML", "Environment", 0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa92216592f1L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3aec94a4-ce6f-409b-b63c-bd90270fe589(GiML.structure)/3797847930382422769");
    b.version(2);
    b.aggregate("teamsInstances", 0x34b4aa9221659301L).target(0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa92216592f5L).optional(true).ordered(true).multiple(true).origin("3797847930382422785").done();
    b.aggregate("assignedChallenges", 0x34b4aa9221659305L).target(0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa9221659304L).optional(true).ordered(true).multiple(true).origin("3797847930382422789").done();
    b.alias("environment");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTeamState() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("GiML", "TeamState", 0x8c6624b06c1e43b4L, 0xb7ca7509cedad45bL, 0x34b4aa92216592f5L);
    b.class_(false, false, false);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3aec94a4-ce6f-409b-b63c-bd90270fe589(GiML.structure)/3797847930382422773");
    b.version(2);
    b.aggregate("teams", 0x34b4aa92216592f9L).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a735L).optional(true).ordered(true).multiple(true).origin("3797847930382422777").done();
    b.aggregate("players", 0x34b4aa92216592fcL).target(0xbc08d5ab032d46dcL, 0x996446504a89c9c8L, 0x3eecc86bd037a739L).optional(true).ordered(true).multiple(true).origin("3797847930382422780").done();
    b.alias("teamState");
    return b.create();
  }
}
